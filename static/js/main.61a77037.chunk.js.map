{"version":3,"sources":["api/index.ts","hooks/usePrevious.ts","components/utils/Increment.tsx","components/utils/Ripple.tsx","components/Streamer.tsx","components/icons/Crown.tsx","components/icons/Banner.tsx","components/icons/Triangle.tsx","components/StreamerRankOne.tsx","components/utils/AnimVertically.tsx","components/StreamersList.tsx","utils/index.ts","components/App.tsx","themes/index.ts","index.tsx"],"names":["fetchData","fetch","response","json","usePrevious","value","ref","useRef","useEffect","current","Increment","className","duration","startTime","animValue","previousValue","req","Date","getTime","window","requestAnimationFrame","animated","milli","step","valeur","minRef","maxRef","minDest","maxDest","result","Math","min","max","normalizeValue","round","innerHTML","cancelAnimationFrame","rippling","keyframes","Wrap","styled","div","p","theme","second","Ripple","watch","useState","ripple","setRipple","resetRipple","useCallback","onAnimationEnd","Column","FirstColumn","Ellipsis","Rank","Name","Picture","picture","SecondColumn","Score","Pt","span","Streamer","rank","displayName","score","memo","Crown","xmlns","viewBox","fill","d","Banner","Triangle","gradient","first","WrapRank","StyledCrown","CommonTriangle","LeftTriangle","RightTriangle","CommonBanner","LeftBanner","RightBanner","StyledRipple","StreamerRankOne","elemHeight","fromY","toY","from","to","anim","midY","moveVertically","css","AnimVertically","children","previousRank","Container","StyledStreamer","StyledAnimVertically","StreamersList","streamers","style","height","length","slice","map","userID","restStreamer","randomScoreChangeAndSort","randomStreamerIndex","floor","random","randomScore","streamer","index","sort","a","b","Error","App","setStreamers","setup","data","timeout","setInterval","clearInterval","rootElement","document","getElementById","createRoot","render","third"],"mappings":"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","file":"static/js/main.61a77037.chunk.js","sourcesContent":["import type { StreamerType } from \"../types/index\";\r\n\r\nconst API_ENDPOINT = \"https://webcdn.17app.co/campaign/pretest/data.json\";\r\n\r\nexport const fetchData = async (): Promise<never | StreamerType[]> => {\r\n  try {\r\n    const response = await fetch(API_ENDPOINT);\r\n    return await response.json();\r\n  } catch {\r\n    return [];\r\n  }\r\n};\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nfunction usePrevious<T>(value: T): T {\r\n  const ref: any = useRef<T>();\r\n\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]);\r\n\r\n  return ref.current;\r\n}\r\n\r\nexport default usePrevious;\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nimport usePrevious from \"../../hooks/usePrevious\";\r\n\r\nimport type { PropsWithChildren } from \"react\";\r\n\r\ntype Props = PropsWithChildren & {\r\n  value: number;\r\n  duration?: number;\r\n  className?: string;\r\n};\r\n\r\nexport const normalizeValue = (\r\n  valeur: number,\r\n  minRef: number,\r\n  maxRef: number,\r\n  minDest: number,\r\n  maxDest: number\r\n): number => {\r\n  let result =\r\n    minDest +\r\n    ((valeur - minRef) * (maxDest - minDest)) / (maxRef - minRef || 1);\r\n  if (result < Math.min(minDest, maxDest)) {\r\n    result = Math.min(minDest, maxDest);\r\n  }\r\n  if (result > Math.max(minDest, maxDest)) {\r\n    result = Math.max(minDest, maxDest);\r\n  }\r\n  return result;\r\n};\r\n\r\nconst Increment = ({ className, value, duration = 500 }: Props) => {\r\n  const startTime = useRef<number>(0);\r\n  const ref = useRef<null | HTMLSpanElement>(null);\r\n  const animValue = useRef(0);\r\n  const previousValue = usePrevious(value);\r\n\r\n  useEffect(() => {\r\n    let req: number | null = null;\r\n    startTime.current = new Date().getTime();\r\n\r\n    const animated = () => {\r\n      const now = new Date().getTime();\r\n      const milli = now - startTime.current;\r\n      if (milli < duration) {\r\n        const step = normalizeValue(\r\n          milli,\r\n          0,\r\n          duration,\r\n          previousValue || 0,\r\n          value\r\n        );\r\n        animValue.current = Math.round(step);\r\n        req = window.requestAnimationFrame(animated);\r\n      } else {\r\n        animValue.current = value;\r\n      }\r\n      if (ref.current) ref.current.innerHTML = `${animValue.current}`;\r\n    };\r\n    req = window.requestAnimationFrame(animated);\r\n\r\n    return () => {\r\n      if (req) window.cancelAnimationFrame(req);\r\n    };\r\n  }, [value, duration, previousValue]);\r\n\r\n  return <span className={className} ref={ref} />;\r\n};\r\n\r\nexport default Increment;\r\n","import styled, { keyframes } from \"styled-components\";\r\nimport { useEffect, useState, useCallback } from \"react\";\r\n\r\nconst rippling = keyframes`\r\n  0% {\r\n    opacity: 1;\r\n    transform: scale(0);\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n    transform: scale(20);\r\n  }\r\n}\r\n`;\r\n\r\nconst Wrap = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 15px;\r\n  opacity: 0;\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  background: ${(p) => p.theme.second};\r\n  transform-origin: center;\r\n  &.anim {\r\n    animation: ${rippling} 300ms linear;\r\n  }\r\n`;\r\n\r\nconst Ripple = ({\r\n  className,\r\n  watch\r\n}: {\r\n  className?: string;\r\n  watch: number;\r\n}) => {\r\n  const [ripple, setRipple] = useState(false);\r\n\r\n  const resetRipple = useCallback(() => {\r\n    setRipple(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setRipple(true);\r\n  }, [watch]);\r\n\r\n  return (\r\n    <Wrap\r\n      onAnimationEnd={resetRipple}\r\n      className={`${className} ${ripple ? \"anim\" : \"\"}`}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Ripple;\r\n","import { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Increment from \"./utils/Increment\";\r\nimport Ripple from \"./utils/Ripple\";\r\nimport type { StreamerType } from \"../types/index\";\r\n\r\ntype Props = Omit<\r\n  StreamerType & {\r\n    className?: string;\r\n    rank: number;\r\n  },\r\n  \"userID\"\r\n>;\r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  border-radius: 0.4em;\r\n  font-size: 0.9em;\r\n  color: white;\r\n  position: relative;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Column = styled.div`\r\n  padding: 0 0.5em;\r\n`;\r\n\r\nconst FirstColumn = styled(Column)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst Ellipsis = styled.p`\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nconst Rank = styled.p`\r\n  text-align: center;\r\n  min-width: 30px;\r\n  font-weight: 800;\r\n`;\r\n\r\nconst Name = styled(Ellipsis)`\r\n  margin-left: 5px;\r\n  text-shadow: 1px 1px 0 black;\r\n`;\r\n\r\ntype PrictureProps = Pick<Props, \"picture\">;\r\nconst Picture = styled.div<PrictureProps>`\r\n  width: 36px;\r\n  height: 36px;\r\n  margin: 0.5em;\r\n  border-radius: 50%;\r\n  background-size: cover;\r\n  background-image: url(${(p) => p.picture});\r\n`;\r\n\r\nconst SecondColumn = styled(Column)`\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  margin: 0 0.5em;\r\n  text-shadow: 1px 1px 0 black;\r\n`;\r\n\r\nconst Score = styled(Increment)``;\r\n\r\nconst Pt = styled.span`\r\n  font-size: 0.9em;\r\n  font-weight: 400;\r\n  opacity: 0.8;\r\n  margin-left: 1px;\r\n`;\r\n\r\nconst Streamer = ({ className, rank, picture, displayName, score }: Props) => {\r\n  return (\r\n    <Wrap className={className}>\r\n      <Ripple watch={score} />\r\n      <FirstColumn>\r\n        <Rank>{rank + 2}</Rank>\r\n        <Picture picture={picture} />\r\n        <Name>{displayName}</Name>\r\n      </FirstColumn>\r\n      <SecondColumn>\r\n        <Score value={score} />\r\n        <Pt>pt</Pt>\r\n      </SecondColumn>\r\n    </Wrap>\r\n  );\r\n};\r\n\r\nexport default memo(Streamer);\r\n","// Font Awesome Free 6.2.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2022 Fonticons, Inc.\r\n\r\nconst Crown = ({ className }: { className?: string }) => (\r\n  <svg\r\n    className={className}\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 576 512\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path d=\"M309 106c11.4-7 19-19.7 19-34c0-22.1-17.9-40-40-40s-40 17.9-40 40c0 14.4 7.6 27 19 34L209.7 220.6c-9.1 18.2-32.7 23.4-48.6 10.7L72 160c5-6.7 8-15 8-24c0-22.1-17.9-40-40-40S0 113.9 0 136s17.9 40 40 40c.2 0 .5 0 .7 0L86.4 427.4c5.5 30.4 32 52.6 63 52.6H426.6c30.9 0 57.4-22.1 63-52.6L535.3 176c.2 0 .5 0 .7 0c22.1 0 40-17.9 40-40s-17.9-40-40-40s-40 17.9-40 40c0 9 3 17.3 8 24l-89.1 71.3c-15.9 12.7-39.5 7.5-48.6-10.7L309 106z\" />\r\n  </svg>\r\n);\r\n\r\nexport default Crown;\r\n","const Banner = ({ className }: { className?: string }) => (\r\n  <svg\r\n    className={className}\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 80 40\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path d=\"M0 40 L80 40 L60 20 L80 0 L0 0Z\" />\r\n  </svg>\r\n);\r\n\r\nexport default Banner;\r\n","const Triangle = ({ className }: { className?: string }) => (\r\n  <svg\r\n    className={className}\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 80 80\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path d=\"M0 80 L80 0 L0 0 Z\" />\r\n  </svg>\r\n);\r\n\r\nexport default Triangle;\r\n","import { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { StreamerType } from \"../types/index\";\r\n\r\nimport Increment from \"./utils/Increment\";\r\nimport Ripple from \"./utils/Ripple\";\r\nimport Crown from \"./icons/Crown\";\r\nimport Banner from \"./icons/Banner\";\r\nimport Triangle from \"./icons/Triangle\";\r\n\r\ntype Props = Omit<\r\n  StreamerType & {\r\n    className?: string;\r\n  },\r\n  \"userID\"\r\n>;\r\n\r\nconst Wrap = styled.div`\r\n  position: relative;\r\n  overflow: hidden;\r\n  background: ${(p) => p.theme.gradient};\r\n  border-radius: 0.4em;\r\n  padding: 1em;\r\n  margin: 5px auto 3px;\r\n`;\r\n\r\ntype PictureType = Pick<Props, \"picture\">;\r\nconst Picture = styled.div<PictureType>`\r\n  position: relative;\r\n  width: 100px;\r\n  height: 100px;\r\n  margin: 0 auto;\r\n  border-radius: 50%;\r\n  border: 4px solid ${(p) => p.theme.first};\r\n  background-size: cover;\r\n  background-image: url(${(p) => p.picture});\r\n  box-shadow: 4px 4px 10px rgba(0, 0, 255, 0.3);\r\n  z-index: 1;\r\n`;\r\n\r\nconst WrapRank = styled.div`\r\n  position: relative;\r\n  margin-bottom: -20px;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Rank = styled.p`\r\n  position: absolute;\r\n  width: 100%;\r\n  top: 40%;\r\n  text-align: center;\r\n  font-size: 2em;\r\n  z-index: 2;\r\n  margin: 0;\r\n  color: white;\r\n`;\r\n\r\nconst StyledCrown = styled(Crown)`\r\n  width: 100px;\r\n  color: ${(p) => p.theme.second};\r\n  opacity: 0.5;\r\n`;\r\n\r\nconst Name = styled.p`\r\n  position: relative;\r\n  letter-spacing: 0.1em;\r\n  font-weight: 800;\r\n  display: inline-block;\r\n  text-align: center;\r\n  color: white;\r\n  padding: 4px 2em;\r\n  margin: -1em 0 0.5em;\r\n  background: rgb(84, 0, 90);\r\n  text-shadow: 1px 1px 0 black;\r\n  z-index: 3;\r\n`;\r\n\r\nconst Score = styled.p`\r\n  margin: 0;\r\n  font-weight: 800;\r\n  color: white;\r\n  text-shadow: 1px 1px 0 black;\r\n`;\r\n\r\nconst Pt = styled.span`\r\n  font-size: 0.9em;\r\n  font-weight: 400;\r\n  opacity: 0.8;\r\n  margin-left: 1px;\r\n`;\r\n\r\nconst CommonTriangle = styled(Triangle)`\r\n  position: absolute;\r\n  z-index: 0;\r\n  top: 10px;\r\n  height: 20px;\r\n  color: rgb(180, 0, 255);\r\n`;\r\n\r\nconst LeftTriangle = styled(CommonTriangle)`\r\n  transform: scaleX(-1);\r\n  right: 100%;\r\n`;\r\n\r\nconst RightTriangle = styled(CommonTriangle)`\r\n  left: 100%;\r\n`;\r\n\r\nconst CommonBanner = styled(Banner)`\r\n  position: absolute;\r\n  z-index: 0;\r\n  top: 15px;\r\n  height: 20px;\r\n  color: rgb(150, 0, 180);\r\n`;\r\n\r\nconst LeftBanner = styled(CommonBanner)`\r\n  transform: scaleX(-1);\r\n  right: 95%;\r\n`;\r\n\r\nconst RightBanner = styled(CommonBanner)`\r\n  left: 95%;\r\n`;\r\n\r\nconst StyledRipple = styled(Ripple)`\r\n  left: calc(50% - 25px);\r\n  bottom: 0;\r\n  && {\r\n    top: auto;\r\n  }\r\n`;\r\n\r\nconst StreamerRankOne = ({ className, displayName, score, picture }: Props) => {\r\n  return (\r\n    <Wrap className={className}>\r\n      <StyledRipple watch={score} />\r\n      <WrapRank>\r\n        <StyledCrown />\r\n        <Rank>1</Rank>\r\n      </WrapRank>\r\n      <Picture picture={picture} />\r\n      <Name>\r\n        {displayName}\r\n        <LeftTriangle />\r\n        <RightTriangle />\r\n        <LeftBanner />\r\n        <RightBanner />\r\n      </Name>\r\n      <Score>\r\n        <Increment value={score} />\r\n        <Pt>pt</Pt>\r\n      </Score>\r\n    </Wrap>\r\n  );\r\n};\r\n\r\nexport default memo(StreamerRankOne);\r\n","import styled, { keyframes, css } from \"styled-components\";\r\nimport type { PropsWithChildren } from \"react\";\r\n\r\nimport usePrevious from \"../../hooks/usePrevious\";\r\n\r\ntype Props = PropsWithChildren & {\r\n  className?: string;\r\n  rank: number;\r\n  elemHeight?: number;\r\n};\r\n\r\nconst moveVertically = (fromY: number, toY: number, midY: number) => keyframes`\r\n  0% {\r\n    transform : translateY(${fromY}px);\r\n  }\r\n  50% {\r\n    transform : translateY(${midY}px) scale(${fromY < toY ? 0.9 : 1.1});\r\n  }\r\n  100% {\r\n    transform : translateY(${toY}px);\r\n  }\r\n`;\r\n\r\ntype StyledProps = Pick<Props, \"elemHeight\"> & { fromY: number; toY: number };\r\nconst Wrap = styled.div<StyledProps>`\r\n  position: absolute;\r\n  height: ${(p) => p.elemHeight || 60}px;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  z-index: ${(p) => p.fromY};\r\n  transform-origin: center center;\r\n  transform: translateY(${(p) => p.toY * (p.elemHeight || 60)}px);\r\n  ${({ fromY, toY, elemHeight }) => {\r\n    if (fromY !== toY) {\r\n      const from = fromY * (elemHeight || 60);\r\n      const to = toY * (elemHeight || 60);\r\n      const mid = (from + to) / 2;\r\n      const anim = moveVertically(from, to, mid);\r\n      return css`\r\n        animation: ${anim} 300ms linear forwards;\r\n      `;\r\n    }\r\n  }}\r\n`;\r\n\r\nconst AnimVertically = ({\r\n  children,\r\n  className,\r\n  rank = 0,\r\n  elemHeight = 60\r\n}: Props) => {\r\n  const previousRank = usePrevious(rank);\r\n  return (\r\n    <Wrap\r\n      className={className}\r\n      fromY={previousRank}\r\n      toY={rank}\r\n      elemHeight={elemHeight}\r\n    >\r\n      {children}\r\n    </Wrap>\r\n  );\r\n};\r\n\r\nexport default AnimVertically;\r\n","import styled from \"styled-components\";\r\n\r\nimport type { StreamerType } from \"../types/index\";\r\nimport Streamer from \"./Streamer\";\r\nimport StreamerRankOne from \"./StreamerRankOne\";\r\nimport AnimVertically from \"./utils/AnimVertically\";\r\n\r\nconst Container = styled.div`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst StyledStreamer = styled(Streamer)<{ rank: number }>`\r\n  background: hsl(${(p) => 304 - p.rank * 10} ${(p) => 90 - p.rank * 7}% 40%);\r\n`;\r\n\r\nconst StyledAnimVertically = styled(AnimVertically)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst Wrap = styled.div`\r\n  position: relative;\r\n`;\r\n\r\ntype Props = {\r\n  streamers: StreamerType[];\r\n};\r\n\r\nconst StreamersList = ({ streamers }: Props) => {\r\n  return (\r\n    <Container>\r\n      <StreamerRankOne {...streamers[0]} />\r\n      <Wrap style={{ height: `${(streamers.length - 1) * 60}px` }}>\r\n        {streamers\r\n          .slice(1, streamers.length)\r\n          .map(({ userID, ...restStreamer }, rank) => (\r\n            <StyledAnimVertically key={userID} rank={rank} elemHeight={60}>\r\n              <StyledStreamer rank={rank} {...restStreamer} />\r\n            </StyledAnimVertically>\r\n          ))}\r\n      </Wrap>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default StreamersList;\r\n","import type { StreamerType } from \"../types/index\";\r\n\r\nexport const randomScoreChangeAndSort = (\r\n  streamers: StreamerType[]\r\n): StreamerType[] => {\r\n  const randomStreamerIndex = Math.floor(Math.random() * streamers.length);\r\n  const randomScore = Math.round(1000 + Math.random() * 1000);\r\n  return streamers\r\n    .map((streamer, index) => ({\r\n      ...streamer,\r\n      score:\r\n        index === randomStreamerIndex\r\n          ? streamer.score + randomScore\r\n          : streamer.score\r\n    }))\r\n    .sort((a, b) => (a.score - b.score > 0 ? -1 : 1));\r\n};\r\n","import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { fetchData } from \"../api/index\";\nimport type { StreamerType } from \"../types/index\";\nimport StreamersList from \"./StreamersList\";\nimport { randomScoreChangeAndSort } from \"../utils/index\";\n\nconst Error = styled.p`\n  background: ${(p) => p.theme.gradient};\n  border-radius: 0.4em;\n  padding: 1em;\n`;\n\nexport default function App() {\n  const [streamers, setStreamers] = useState<StreamerType[]>([]);\n\n  useEffect(() => {\n    // fetch data\n    const setup = async () => {\n      const data = await fetchData();\n      setStreamers(data);\n    };\n    setup();\n  }, []);\n\n  useEffect(() => {\n    // randomize scores every second for one streamer\n    const timeout = setInterval(() => {\n      setStreamers(randomScoreChangeAndSort);\n    }, 1000);\n\n    return () => {\n      clearInterval(timeout);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {streamers.length ? (\n        <StreamersList streamers={streamers} />\n      ) : (\n        <Error>No streamers availables.</Error>\n      )}\n    </div>\n  );\n}\n","export default {\r\n  first: \"rgb(243, 47, 229)\",\r\n  second: \"rgb(195, 104, 243)\",\r\n  third: \"rgb(118, 154, 233)\",\r\n  gradient: \"linear-gradient(to bottom, rgb(255, 173, 173), rgb(243, 47, 229))\"\r\n};\r\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport App from \"./components/App\";\nimport theme from \"./themes\";\n\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nif (rootElement) {\n  const root = createRoot(rootElement);\n  root.render(\n    <StrictMode>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </StrictMode>\n  );\n}\n"],"sourceRoot":""}